{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "cdk-stack-infer-infra": {
        "id": "cdk-stack-infer-infra",
        "path": "cdk-stack-infer-infra",
        "children": {
          "myNewVPC": {
            "id": "myNewVPC",
            "path": "cdk-stack-infer-infra/myNewVPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-infra/myNewVPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-stack-infer-infra/myNewVPC"
                      }
                    ]
                  }
                }
              },
              "gwpublicSubnet1": {
                "id": "gwpublicSubnet1",
                "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/24",
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "gwpublic"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwpublicSubnet1RouteTable9F1E0448"
                        },
                        "subnetId": {
                          "Ref": "myNewVPCgwpublicSubnet1Subnet746FE28B"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwpublicSubnet1RouteTable9F1E0448"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "myNewVPCIGW3E685CA0"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "myNewVPCgwpublicSubnet1EIPC6CCED0C",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "myNewVPCgwpublicSubnet1Subnet746FE28B"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "gwpublicSubnet2": {
                "id": "gwpublicSubnet2",
                "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.1.0/24",
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "gwpublic"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwpublicSubnet2RouteTable2FDF18B5"
                        },
                        "subnetId": {
                          "Ref": "myNewVPCgwpublicSubnet2Subnet38AD1D96"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwpublicSubnet2RouteTable2FDF18B5"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "myNewVPCIGW3E685CA0"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "myNewVPCgwpublicSubnet2EIPFEF9B128",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "myNewVPCgwpublicSubnet2Subnet38AD1D96"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwpublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "gwprivateSubnet1": {
                "id": "gwprivateSubnet1",
                "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.2.0/24",
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "gwprivate"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwprivateSubnet1RouteTableAD96D49F"
                        },
                        "subnetId": {
                          "Ref": "myNewVPCgwprivateSubnet1Subnet38BA0921"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwprivateSubnet1RouteTableAD96D49F"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "myNewVPCgwpublicSubnet1NATGateway4BA81805"
                        }
                      }
                    }
                  }
                }
              },
              "gwprivateSubnet2": {
                "id": "gwprivateSubnet2",
                "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.3.0/24",
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "gwprivate"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "myNewVPC79A1F3A2"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwprivateSubnet2RouteTable42DB144C"
                        },
                        "subnetId": {
                          "Ref": "myNewVPCgwprivateSubnet2Subnet1AD5A18B"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/myNewVPC/gwprivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "myNewVPCgwprivateSubnet2RouteTable42DB144C"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "myNewVPCgwpublicSubnet2NATGateway75F485C8"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "cdk-stack-infer-infra/myNewVPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-stack-infer-infra/myNewVPC"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "cdk-stack-infer-infra/myNewVPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "myNewVPC79A1F3A2"
                    },
                    "internetGatewayId": {
                      "Ref": "myNewVPCIGW3E685CA0"
                    }
                  }
                }
              }
            }
          },
          "Vpc": {
            "id": "Vpc",
            "path": "cdk-stack-infer-infra/Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-infra/Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-stack-infer-infra/Vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet1EIPD7E02669",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "cdk-stack-infer-infra/Vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/Vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet1Subnet536B997A"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "cdk-stack-infer-infra/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "cdk-stack-infer-infra/Vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "cdk-stack-infer-infra/Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "cdk-stack-infer-infra/Vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "cdk-stack-infer-infra/Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    },
                    "internetGatewayId": {
                      "Ref": "VpcIGWD7BA715C"
                    }
                  }
                }
              }
            }
          },
          "RedisClusterPrivateSubnetGroup-test": {
            "id": "RedisClusterPrivateSubnetGroup-test",
            "path": "cdk-stack-infer-infra/RedisClusterPrivateSubnetGroup-test",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ElastiCache::SubnetGroup",
              "aws:cdk:cloudformation:props": {
                "description": "Redis subnet for recommendations",
                "subnetIds": [
                  {
                    "Ref": "VpcPrivateSubnet1Subnet536B997A"
                  },
                  {
                    "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                  }
                ],
                "cacheSubnetGroupName": "recommendations-redis-subnet-group-test"
              }
            }
          },
          "redis-security-group-test": {
            "id": "redis-security-group-test",
            "path": "cdk-stack-infer-infra/redis-security-group-test",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-infra/redis-security-group-test/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "cdk-stack-infer-infra/redis-security-group-test",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "securityGroupIngress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 6379,
                        "toPort": 6379,
                        "description": "from 0.0.0.0/0:6379"
                      }
                    ],
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    }
                  }
                }
              }
            }
          },
          "RecommendationsRedisCacheCluster": {
            "id": "RecommendationsRedisCacheCluster",
            "path": "cdk-stack-infer-infra/RecommendationsRedisCacheCluster",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ElastiCache::CacheCluster",
              "aws:cdk:cloudformation:props": {
                "cacheNodeType": "cache.t2.small",
                "engine": "redis",
                "numCacheNodes": 1,
                "cacheSubnetGroupName": "recommendations-redis-subnet-group-test",
                "clusterName": "redis-gw",
                "vpcSecurityGroupIds": [
                  {
                    "Fn::GetAtt": [
                      "redissecuritygrouptest5F830A97",
                      "GroupId"
                    ]
                  }
                ]
              }
            }
          },
          "FargateTaskExecutionServiceRole": {
            "id": "FargateTaskExecutionServiceRole",
            "path": "cdk-stack-infer-infra/FargateTaskExecutionServiceRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-infra/FargateTaskExecutionServiceRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    }
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "cdk-stack-infer-infra/FargateTaskExecutionServiceRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-infra/FargateTaskExecutionServiceRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5",
                        "roles": [
                          {
                            "Ref": "FargateTaskExecutionServiceRole0484E2D1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "cdk-stack-infer-infra/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "cdk-stack-infer-infra/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "cdk-stack-infer-infra/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "cdk-stack-infer-infra/Exports",
            "children": {
              "Output{\"Ref\":\"VpcPrivateSubnet1Subnet536B997A\"}": {
                "id": "Output{\"Ref\":\"VpcPrivateSubnet1Subnet536B997A\"}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Ref\":\"VpcPrivateSubnet1Subnet536B997A\"}"
              },
              "Output{\"Ref\":\"VpcPrivateSubnet2Subnet3788AAA1\"}": {
                "id": "Output{\"Ref\":\"VpcPrivateSubnet2Subnet3788AAA1\"}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Ref\":\"VpcPrivateSubnet2Subnet3788AAA1\"}"
              },
              "Output{\"Ref\":\"Vpc8378EB38\"}": {
                "id": "Output{\"Ref\":\"Vpc8378EB38\"}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Ref\":\"Vpc8378EB38\"}"
              },
              "Output{\"Ref\":\"VpcPublicSubnet1Subnet5C2D37C4\"}": {
                "id": "Output{\"Ref\":\"VpcPublicSubnet1Subnet5C2D37C4\"}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Ref\":\"VpcPublicSubnet1Subnet5C2D37C4\"}"
              },
              "Output{\"Ref\":\"VpcPublicSubnet2Subnet691E08A3\"}": {
                "id": "Output{\"Ref\":\"VpcPublicSubnet2Subnet691E08A3\"}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Ref\":\"VpcPublicSubnet2Subnet691E08A3\"}"
              },
              "Output{\"Fn::GetAtt\":[\"Vpc8378EB38\",\"CidrBlock\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"Vpc8378EB38\",\"CidrBlock\"]}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Fn::GetAtt\":[\"Vpc8378EB38\",\"CidrBlock\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"RecommendationsRedisCacheCluster\",\"RedisEndpoint.Address\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"RecommendationsRedisCacheCluster\",\"RedisEndpoint.Address\"]}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Fn::GetAtt\":[\"RecommendationsRedisCacheCluster\",\"RedisEndpoint.Address\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"RecommendationsRedisCacheCluster\",\"RedisEndpoint.Port\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"RecommendationsRedisCacheCluster\",\"RedisEndpoint.Port\"]}",
                "path": "cdk-stack-infer-infra/Exports/Output{\"Fn::GetAtt\":[\"RecommendationsRedisCacheCluster\",\"RedisEndpoint.Port\"]}"
              }
            }
          }
        }
      },
      "cdk-stack-infer-dkn": {
        "id": "cdk-stack-infer-dkn",
        "path": "cdk-stack-infer-dkn",
        "children": {
          "FargateTaskExecutionServiceRole": {
            "id": "FargateTaskExecutionServiceRole",
            "path": "cdk-stack-infer-dkn/FargateTaskExecutionServiceRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-dkn/FargateTaskExecutionServiceRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonECS_FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "cdk-stack-infer-dkn/FargateTaskExecutionServiceRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-dkn/FargateTaskExecutionServiceRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "DKNinferenceTaskDKNinferenceContanerLogGroup4CB3AD65",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5",
                        "roles": [
                          {
                            "Ref": "FargateTaskExecutionServiceRole0484E2D1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "DKN-inferencefargate-service-autoscaling": {
            "id": "DKN-inferencefargate-service-autoscaling",
            "path": "cdk-stack-infer-dkn/DKN-inferencefargate-service-autoscaling",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-dkn/DKN-inferencefargate-service-autoscaling/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              }
            }
          },
          "DKN-inference-Task": {
            "id": "DKN-inference-Task",
            "path": "cdk-stack-infer-dkn/DKN-inference-Task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-dkn/DKN-inference-Task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "233121040379.dkr.ecr.cn-northwest-1.amazonaws.com.cn/gw-infer:latest",
                        "name": "DKN-inference-Contaner",
                        "portMappings": [
                          {
                            "containerPort": 8501,
                            "hostPort": 8501,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "DKNinferenceTaskDKNinferenceContanerLogGroup4CB3AD65"
                            },
                            "awslogs-stream-prefix": "DKN-inference",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "MODEL_S3_KEY",
                            "value": "s3://rp-gw-1/dkn_model/dkn-2020-12-03-11-53-53-391/output/model.tar.gz"
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    },
                    "family": "cdkstackinferdknDKNinferenceTaskD52D2EA2",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "DKN-inference-Contaner": {
                "id": "DKN-inference-Contaner",
                "path": "cdk-stack-infer-dkn/DKN-inference-Task/DKN-inference-Contaner",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Task/DKN-inference-Contaner/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-dkn/DKN-inference-Task/DKN-inference-Contaner/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "DKN-inference-Service": {
            "id": "DKN-inference-Service",
            "path": "cdk-stack-infer-dkn/DKN-inference-Service",
            "children": {
              "LB": {
                "id": "LB",
                "path": "cdk-stack-infer-dkn/DKN-inference-Service/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Service/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": [
                          {
                            "key": "deletion_protection.enabled",
                            "value": "false"
                          }
                        ],
                        "scheme": "internal",
                        "subnets": [
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940"
                          },
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3"
                          }
                        ],
                        "type": "network"
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Service/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-dkn/DKN-inference-Service/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "DKNinferenceServiceLBPublicListenerECSGroup3AE279B0"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "DKNinferenceServiceLB99F4CE4C"
                            },
                            "port": 8501,
                            "protocol": "TCP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "cdk-stack-infer-dkn/DKN-inference-Service/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-infer-dkn/DKN-inference-Service/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "TCP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "cdk-stack-infer-dkn/DKN-inference-Service/LoadBalancerDNS"
              },
              "Service": {
                "id": "Service",
                "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "DKNinferencefargateserviceautoscaling22E4AB44"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "DKNinferenceServiceLBPublicListenerECSGroup3AE279B0"
                            },
                            "containerName": "DKN-inference-Contaner",
                            "containerPort": 8501
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "ENABLED",
                            "subnets": [
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                              },
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "DKNinferenceServiceSecurityGroup0FCBF7ED",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "DKNinferenceTaskE19B6CCB"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "cdk-stack-infer-dkn/DKN-inference-Service/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputFnGetAttVpc8378EB38CidrBlock14DD2396"
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 8501,
                                "toPort": 8501,
                                "description": "Allow http inbound from VPC"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ScalingRole": {
                    "id": "ScalingRole",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/ScalingRole"
                  },
                  "TaskCount": {
                    "id": "TaskCount",
                    "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/TaskCount",
                    "children": {
                      "Target": {
                        "id": "Target",
                        "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/TaskCount/Target",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/TaskCount/Target/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                              "aws:cdk:cloudformation:props": {
                                "maxCapacity": 2,
                                "minCapacity": 1,
                                "resourceId": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "service/",
                                      {
                                        "Ref": "DKNinferencefargateserviceautoscaling22E4AB44"
                                      },
                                      "/",
                                      {
                                        "Fn::GetAtt": [
                                          "DKNinferenceServiceD43367CA",
                                          "Name"
                                        ]
                                      }
                                    ]
                                  ]
                                },
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                    ]
                                  ]
                                },
                                "scalableDimension": "ecs:service:DesiredCount",
                                "serviceNamespace": "ecs"
                              }
                            }
                          },
                          "CpuScaling": {
                            "id": "CpuScaling",
                            "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/TaskCount/Target/CpuScaling",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "cdk-stack-infer-dkn/DKN-inference-Service/Service/TaskCount/Target/CpuScaling/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyName": "cdkstackinferdknDKNinferenceServiceTaskCountTargetCpuScaling8FEE79BA",
                                    "policyType": "TargetTrackingScaling",
                                    "scalingTargetId": {
                                      "Ref": "DKNinferenceServiceTaskCountTarget6BA2FFDE"
                                    },
                                    "targetTrackingScalingPolicyConfiguration": {
                                      "predefinedMetricSpecification": {
                                        "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                      },
                                      "scaleInCooldown": 60,
                                      "scaleOutCooldown": 60,
                                      "targetValue": 50
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "cdk-stack-infer-dkn/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "cdk-stack-infer-dkn/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "cdk-stack-infer-dkn/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "cdk-stack-infer-dkn/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"DKNinferenceServiceLB99F4CE4C\",\"DNSName\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DKNinferenceServiceLB99F4CE4C\",\"DNSName\"]}",
                "path": "cdk-stack-infer-dkn/Exports/Output{\"Fn::GetAtt\":[\"DKNinferenceServiceLB99F4CE4C\",\"DNSName\"]}"
              }
            }
          }
        }
      },
      "cdk-stack-infer-graph": {
        "id": "cdk-stack-infer-graph",
        "path": "cdk-stack-infer-graph",
        "children": {
          "gw_lambda_train_role": {
            "id": "gw_lambda_train_role",
            "path": "cdk-stack-infer-graph/gw_lambda_train_role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/gw_lambda_train_role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "lambda.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSageMakerFullAccess"
                          ]
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "gw_sagemaker_train_role": {
            "id": "gw_sagemaker_train_role",
            "path": "cdk-stack-infer-graph/gw_sagemaker_train_role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/gw_sagemaker_train_role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonSageMakerFullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
                          ]
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "graph-train-lambda": {
            "id": "graph-train-lambda",
            "path": "cdk-stack-infer-graph/graph-train-lambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "cdk-stack-infer-graph/graph-train-lambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "cdk-stack-infer-graph/graph-train-lambda/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "cdk-stack-infer-graph/graph-train-lambda/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/graph-train-lambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3BucketFA99A701"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "graph-train.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "gwlambdatrainroleD4532D6A",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "environment": {
                      "variables": {
                        "INPUT_TRAIN_BUCKET": "graph-train-train_bucket",
                        "INPUT_VALIDATION_BUCKET": "graph-train-validation-bucket",
                        "OUTPUT_BUCKET": "graph-train-bucket-model-2020-12-13-16-06-14-690",
                        "NAME": "graph-train",
                        "IMAGE_URI": "856419311962.dkr.ecr.us-east-1.amazonaws.com/sagemaker-recsys-graph-train",
                        "SAGEMAKER_ROLE": {
                          "Fn::GetAtt": [
                            "gwsagemakertrainroleF0C213EC",
                            "Arn"
                          ]
                        },
                        "INSTANCE": "ml.g4dn.xlarge"
                      }
                    }
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "cdk-stack-infer-graph/AssetParameters",
            "children": {
              "35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6": {
                "id": "35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6",
                "path": "cdk-stack-infer-graph/AssetParameters/35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "cdk-stack-infer-graph/AssetParameters/35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "cdk-stack-infer-graph/AssetParameters/35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "cdk-stack-infer-graph/AssetParameters/35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6/ArtifactHash"
                  }
                }
              }
            }
          },
          "graph-train-bucket-event-2020-12-13-16-06-14-690": {
            "id": "graph-train-bucket-event-2020-12-13-16-06-14-690",
            "path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/Notifications",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/Notifications/Resource"
                  }
                }
              },
              "AllowBucketNotificationsTocdkstackinfergraphgraphtrainlambda38F36A83": {
                "id": "AllowBucketNotificationsTocdkstackinfergraphgraphtrainlambda38F36A83",
                "path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/AllowBucketNotificationsTocdkstackinfergraphgraphtrainlambda38F36A83",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "graphtrainlambda00C23353",
                        "Arn"
                      ]
                    },
                    "principal": "s3.amazonaws.com",
                    "sourceAccount": {
                      "Ref": "AWS::AccountId"
                    },
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "graphtrainbucketevent20201213160614690C4D6304C",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "BucketNotificationsHandler050a0587b7544547bf325f094a3db834": {
            "id": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834",
            "path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834",
            "children": {
              "Role": {
                "id": "Role",
                "path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:PutBucketNotification",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
                            "roles": [
                              {
                                "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
              }
            }
          },
          "FargateTaskExecutionServiceRole": {
            "id": "FargateTaskExecutionServiceRole",
            "path": "cdk-stack-infer-graph/FargateTaskExecutionServiceRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/FargateTaskExecutionServiceRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonECS_FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "cdk-stack-infer-graph/FargateTaskExecutionServiceRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-graph/FargateTaskExecutionServiceRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/sagemaker-recsys-graph-inference"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "ecr:GetAuthorizationToken",
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "graphinferencetaskdefinitiongraphinferencecontainerLogGroupE18090C3",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5",
                        "roles": [
                          {
                            "Ref": "FargateTaskExecutionServiceRole0484E2D1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "fargate-service-autoscaling": {
            "id": "fargate-service-autoscaling",
            "path": "cdk-stack-infer-graph/fargate-service-autoscaling",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/fargate-service-autoscaling/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              }
            }
          },
          "graph-inference-task-definition": {
            "id": "graph-inference-task-definition",
            "path": "cdk-stack-infer-graph/graph-inference-task-definition",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/graph-inference-task-definition/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ".dkr.ecr.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/sagemaker-recsys-graph-inference:latest"
                            ]
                          ]
                        },
                        "name": "graph-inference-container",
                        "portMappings": [
                          {
                            "containerPort": 8080,
                            "hostPort": 8080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "graphinferencetaskdefinitiongraphinferencecontainerLogGroupE18090C3"
                            },
                            "awslogs-stream-prefix": "graph-inference",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "KG_PATH",
                            "value": "s3://autorec-1"
                          },
                          {
                            "name": "INPUT_BUCKET_NAME",
                            "value": "s3://autorec-1/input_graph/"
                          },
                          {
                            "name": "OUTPUT_BUCKET_NAME",
                            "value": "s3://autorec-1/output_graph/"
                          }
                        ]
                      }
                    ],
                    "cpu": "2048",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    },
                    "family": "cdkstackinfergraphgraphinferencetaskdefinitionF61DC092",
                    "memory": "4096",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "graph-inference-container": {
                "id": "graph-inference-container",
                "path": "cdk-stack-infer-graph/graph-inference-task-definition/graph-inference-container",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "cdk-stack-infer-graph/graph-inference-task-definition/graph-inference-container/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-graph/graph-inference-task-definition/graph-inference-container/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "graph-inference-image": {
            "id": "graph-inference-image",
            "path": "cdk-stack-infer-graph/graph-inference-image"
          },
          "graph-inference-service": {
            "id": "graph-inference-service",
            "path": "cdk-stack-infer-graph/graph-inference-service",
            "children": {
              "LB": {
                "id": "LB",
                "path": "cdk-stack-infer-graph/graph-inference-service/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-graph/graph-inference-service/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": [
                          {
                            "key": "deletion_protection.enabled",
                            "value": "false"
                          }
                        ],
                        "scheme": "internet-facing",
                        "subnets": [
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                          },
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                          }
                        ],
                        "type": "network"
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "cdk-stack-infer-graph/graph-inference-service/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-graph/graph-inference-service/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "graphinferenceserviceLBPublicListenerECSGroupE47406D2"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "graphinferenceserviceLB9009C70A"
                            },
                            "port": 80,
                            "protocol": "TCP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "cdk-stack-infer-graph/graph-inference-service/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-infer-graph/graph-inference-service/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "TCP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "cdk-stack-infer-graph/graph-inference-service/LoadBalancerDNS"
              },
              "Service": {
                "id": "Service",
                "path": "cdk-stack-infer-graph/graph-inference-service/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "cdk-stack-infer-graph/graph-inference-service/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "fargateserviceautoscalingD107CF93"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "graphinferenceserviceLBPublicListenerECSGroupE47406D2"
                            },
                            "containerName": "graph-inference-container",
                            "containerPort": 8080
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "ENABLED",
                            "subnets": [
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                              },
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "graphinferenceserviceServiceSecurityGroup5B55F824",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "graphinferencetaskdefinitionDC0AB1F4"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "cdk-stack-infer-graph/graph-inference-service/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-graph/graph-inference-service/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "cdk-stack-infer-graph/graph-inference-service/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 8080,
                                "toPort": 8080,
                                "description": "Allow http inbound from VPC"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ScalingRole": {
                    "id": "ScalingRole",
                    "path": "cdk-stack-infer-graph/graph-inference-service/Service/ScalingRole"
                  },
                  "TaskCount": {
                    "id": "TaskCount",
                    "path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount",
                    "children": {
                      "Target": {
                        "id": "Target",
                        "path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount/Target",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount/Target/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                              "aws:cdk:cloudformation:props": {
                                "maxCapacity": 2,
                                "minCapacity": 1,
                                "resourceId": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "service/",
                                      {
                                        "Ref": "fargateserviceautoscalingD107CF93"
                                      },
                                      "/",
                                      {
                                        "Fn::GetAtt": [
                                          "graphinferenceserviceServiceD46966A2",
                                          "Name"
                                        ]
                                      }
                                    ]
                                  ]
                                },
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                    ]
                                  ]
                                },
                                "scalableDimension": "ecs:service:DesiredCount",
                                "serviceNamespace": "ecs"
                              }
                            }
                          },
                          "CpuScaling": {
                            "id": "CpuScaling",
                            "path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount/Target/CpuScaling",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount/Target/CpuScaling/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyName": "cdkstackinfergraphgraphinferenceserviceServiceTaskCountTargetCpuScaling4602FE96",
                                    "policyType": "TargetTrackingScaling",
                                    "scalingTargetId": {
                                      "Ref": "graphinferenceserviceServiceTaskCountTargetD151BF2C"
                                    },
                                    "targetTrackingScalingPolicyConfiguration": {
                                      "predefinedMetricSpecification": {
                                        "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                      },
                                      "scaleInCooldown": 60,
                                      "scaleOutCooldown": 60,
                                      "targetValue": 50
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "dkn-train-lambda": {
            "id": "dkn-train-lambda",
            "path": "cdk-stack-infer-graph/dkn-train-lambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "cdk-stack-infer-graph/dkn-train-lambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "cdk-stack-infer-graph/dkn-train-lambda/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "cdk-stack-infer-graph/dkn-train-lambda/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/dkn-train-lambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3BucketFA99A701"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "dkn-train.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "gwlambdatrainroleD4532D6A",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.7",
                    "environment": {
                      "variables": {
                        "INPUT_TRAIN_BUCKET": "autorec-great-wisdom/train.csv/",
                        "INPUT_VALIDATION_BUCKET": "autorec-great-wisdom/test.csv/",
                        "OUTPUT_BUCKET": "autorec-great-wisdom/output_model/",
                        "NAME": "dkn-train",
                        "IMAGE_URI": "002224604296.dkr.ecr.us-east-1.amazonaws.com/sagemaker-recsys-dkn-train",
                        "SAGEMAKER_ROLE": {
                          "Fn::GetAtt": [
                            "gwsagemakertrainroleF0C213EC",
                            "Arn"
                          ]
                        },
                        "INSTANCE": "ml.p2.xlarge"
                      }
                    }
                  }
                }
              }
            }
          },
          "dkn-train-bucket-event": {
            "id": "dkn-train-bucket-event",
            "path": "cdk-stack-infer-graph/dkn-train-bucket-event",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-graph/dkn-train-bucket-event/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "cdk-stack-infer-graph/dkn-train-bucket-event/Notifications",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-graph/dkn-train-bucket-event/Notifications/Resource"
                  }
                }
              },
              "AllowBucketNotificationsTocdkstackinfergraphdkntrainlambdaC2856313": {
                "id": "AllowBucketNotificationsTocdkstackinfergraphdkntrainlambdaC2856313",
                "path": "cdk-stack-infer-graph/dkn-train-bucket-event/AllowBucketNotificationsTocdkstackinfergraphdkntrainlambdaC2856313",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "dkntrainlambda53C85A06",
                        "Arn"
                      ]
                    },
                    "principal": "s3.amazonaws.com",
                    "sourceAccount": {
                      "Ref": "AWS::AccountId"
                    },
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "dkntrainbucketevent0D476D16",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "cdk-stack-infer-graph/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "cdk-stack-infer-graph/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "cdk-stack-infer-graph/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "cdk-stack-infer-graph/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"graphinferenceserviceLB9009C70A\",\"DNSName\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"graphinferenceserviceLB9009C70A\",\"DNSName\"]}",
                "path": "cdk-stack-infer-graph/Exports/Output{\"Fn::GetAtt\":[\"graphinferenceserviceLB9009C70A\",\"DNSName\"]}"
              }
            }
          }
        }
      },
      "cdk-stack-infer-handler": {
        "id": "cdk-stack-infer-handler",
        "path": "cdk-stack-infer-handler",
        "children": {
          "FargateTaskExecutionServiceRole": {
            "id": "FargateTaskExecutionServiceRole",
            "path": "cdk-stack-infer-handler/FargateTaskExecutionServiceRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-handler/FargateTaskExecutionServiceRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonECS_FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "cdk-stack-infer-handler/FargateTaskExecutionServiceRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-handler/FargateTaskExecutionServiceRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "InferHandlerTaskInferHandlerContanerLogGroup67FE1A5E",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5",
                        "roles": [
                          {
                            "Ref": "FargateTaskExecutionServiceRole0484E2D1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "InferHandlerfargate-service-autoscaling": {
            "id": "InferHandlerfargate-service-autoscaling",
            "path": "cdk-stack-infer-handler/InferHandlerfargate-service-autoscaling",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-handler/InferHandlerfargate-service-autoscaling/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              }
            }
          },
          "InferHandler-Task": {
            "id": "InferHandler-Task",
            "path": "cdk-stack-infer-handler/InferHandler-Task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-infer-handler/InferHandler-Task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "233121040379.dkr.ecr.cn-northwest-1.amazonaws.com.cn/recsys-graph-dkn-inference:latest",
                        "name": "InferHandler-Contaner",
                        "portMappings": [
                          {
                            "containerPort": 8080,
                            "hostPort": 8080,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "InferHandlerTaskInferHandlerContanerLogGroup67FE1A5E"
                            },
                            "awslogs-stream-prefix": "InferHandler",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "GRAPH_URL",
                            "value": {
                              "Fn::ImportValue": "cdk-stack-infer-graph:ExportsOutputFnGetAttgraphinferenceserviceLB9009C70ADNSNameCE656A64"
                            }
                          },
                          {
                            "name": "DKN_URL",
                            "value": {
                              "Fn::Join": [
                                "",
                                [
                                  {
                                    "Fn::ImportValue": "cdk-stack-infer-dkn:ExportsOutputFnGetAttDKNinferenceServiceLB99F4CE4CDNSNameDA68E81E"
                                  },
                                  ":8501"
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    },
                    "family": "cdkstackinferhandlerInferHandlerTask323B6F83",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "InferHandler-Contaner": {
                "id": "InferHandler-Contaner",
                "path": "cdk-stack-infer-handler/InferHandler-Task/InferHandler-Contaner",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "cdk-stack-infer-handler/InferHandler-Task/InferHandler-Contaner/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-handler/InferHandler-Task/InferHandler-Contaner/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "InferHandler-Service": {
            "id": "InferHandler-Service",
            "path": "cdk-stack-infer-handler/InferHandler-Service",
            "children": {
              "LB": {
                "id": "LB",
                "path": "cdk-stack-infer-handler/InferHandler-Service/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-infer-handler/InferHandler-Service/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": [
                          {
                            "key": "deletion_protection.enabled",
                            "value": "false"
                          }
                        ],
                        "scheme": "internal",
                        "subnets": [
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940"
                          },
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3"
                          }
                        ],
                        "type": "network"
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "cdk-stack-infer-handler/InferHandler-Service/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-handler/InferHandler-Service/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "InferHandlerServiceLBPublicListenerECSGroup4B6139E1"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "InferHandlerServiceLB74B548CE"
                            },
                            "port": 8080,
                            "protocol": "TCP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "cdk-stack-infer-handler/InferHandler-Service/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-infer-handler/InferHandler-Service/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "TCP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "cdk-stack-infer-handler/InferHandler-Service/LoadBalancerDNS"
              },
              "Service": {
                "id": "Service",
                "path": "cdk-stack-infer-handler/InferHandler-Service/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "cdk-stack-infer-handler/InferHandler-Service/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "InferHandlerfargateserviceautoscalingBDBD3EF3"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "InferHandlerServiceLBPublicListenerECSGroup4B6139E1"
                            },
                            "containerName": "InferHandler-Contaner",
                            "containerPort": 8080
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "ENABLED",
                            "subnets": [
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                              },
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "InferHandlerServiceSecurityGroup31C28816",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "InferHandlerTask9EB3AA13"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "cdk-stack-infer-handler/InferHandler-Service/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-infer-handler/InferHandler-Service/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "cdk-stack-infer-handler/InferHandler-Service/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputFnGetAttVpc8378EB38CidrBlock14DD2396"
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 8080,
                                "toPort": 8080,
                                "description": "Allow http inbound from VPC"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ScalingRole": {
                    "id": "ScalingRole",
                    "path": "cdk-stack-infer-handler/InferHandler-Service/Service/ScalingRole"
                  },
                  "TaskCount": {
                    "id": "TaskCount",
                    "path": "cdk-stack-infer-handler/InferHandler-Service/Service/TaskCount",
                    "children": {
                      "Target": {
                        "id": "Target",
                        "path": "cdk-stack-infer-handler/InferHandler-Service/Service/TaskCount/Target",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-infer-handler/InferHandler-Service/Service/TaskCount/Target/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                              "aws:cdk:cloudformation:props": {
                                "maxCapacity": 2,
                                "minCapacity": 1,
                                "resourceId": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "service/",
                                      {
                                        "Ref": "InferHandlerfargateserviceautoscalingBDBD3EF3"
                                      },
                                      "/",
                                      {
                                        "Fn::GetAtt": [
                                          "InferHandlerService6AEB5D5E",
                                          "Name"
                                        ]
                                      }
                                    ]
                                  ]
                                },
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                    ]
                                  ]
                                },
                                "scalableDimension": "ecs:service:DesiredCount",
                                "serviceNamespace": "ecs"
                              }
                            }
                          },
                          "CpuScaling": {
                            "id": "CpuScaling",
                            "path": "cdk-stack-infer-handler/InferHandler-Service/Service/TaskCount/Target/CpuScaling",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "cdk-stack-infer-handler/InferHandler-Service/Service/TaskCount/Target/CpuScaling/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyName": "cdkstackinferhandlerInferHandlerServiceTaskCountTargetCpuScaling3B921088",
                                    "policyType": "TargetTrackingScaling",
                                    "scalingTargetId": {
                                      "Ref": "InferHandlerServiceTaskCountTarget02F9AB6D"
                                    },
                                    "targetTrackingScalingPolicyConfiguration": {
                                      "predefinedMetricSpecification": {
                                        "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                      },
                                      "scaleInCooldown": 60,
                                      "scaleOutCooldown": 60,
                                      "targetValue": 50
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "cdk-stack-infer-handler/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "cdk-stack-infer-handler/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "cdk-stack-infer-handler/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "cdk-stack-loginto": {
        "id": "cdk-stack-loginto",
        "path": "cdk-stack-loginto",
        "children": {
          "FargateTaskExecutionServiceRole": {
            "id": "FargateTaskExecutionServiceRole",
            "path": "cdk-stack-loginto/FargateTaskExecutionServiceRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-loginto/FargateTaskExecutionServiceRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonECS_FullAccess"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "cdk-stack-loginto/FargateTaskExecutionServiceRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-loginto/FargateTaskExecutionServiceRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "logintoawsTasklogintoawsContanerLogGroupD22B7EB9",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5",
                        "roles": [
                          {
                            "Ref": "FargateTaskExecutionServiceRole0484E2D1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "loginto_awsfargate-service-autoscaling": {
            "id": "loginto_awsfargate-service-autoscaling",
            "path": "cdk-stack-loginto/loginto_awsfargate-service-autoscaling",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-loginto/loginto_awsfargate-service-autoscaling/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              }
            }
          },
          "loginto_aws-Task": {
            "id": "loginto_aws-Task",
            "path": "cdk-stack-loginto/loginto_aws-Task",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "cdk-stack-loginto/loginto_aws-Task/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": "233121040379.dkr.ecr.cn-northwest-1.amazonaws.com.cn/loginto_aws:20201205_01",
                        "name": "loginto_aws-Contaner",
                        "portMappings": [
                          {
                            "containerPort": 8001,
                            "hostPort": 8001,
                            "protocol": "tcp"
                          }
                        ],
                        "logConfiguration": {
                          "logDriver": "awslogs",
                          "options": {
                            "awslogs-group": {
                              "Ref": "logintoawsTasklogintoawsContanerLogGroupD22B7EB9"
                            },
                            "awslogs-stream-prefix": "loginto_aws",
                            "awslogs-region": {
                              "Ref": "AWS::Region"
                            }
                          }
                        },
                        "environment": [
                          {
                            "name": "IR_APP_CONFIG",
                            "value": "/opt/config/zhinengfenfaupdater/config.ini"
                          },
                          {
                            "name": "AWS_REDIS_CLUSTER",
                            "value": "0"
                          },
                          {
                            "name": "AWS_REDIS_PASSWORD",
                            "value": ""
                          },
                          {
                            "name": "AWS_REDIS_DB",
                            "value": "0"
                          },
                          {
                            "name": "AWS_KAFKA_HOST",
                            "value": "10.10.20.65:9092,10.10.20.78:9092,10.10.20.37:9092"
                          },
                          {
                            "name": "AWS_REDIS_HOST",
                            "value": {
                              "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputFnGetAttRecommendationsRedisCacheClusterRedisEndpointAddressE53AA7D0"
                            }
                          },
                          {
                            "name": "AWS_REDIS_PORT",
                            "value": {
                              "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputFnGetAttRecommendationsRedisCacheClusterRedisEndpointPort87BC76BB"
                            }
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    },
                    "family": "cdkstacklogintologintoawsTask0CF63BB3",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "FargateTaskExecutionServiceRole0484E2D1",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "loginto_aws-Contaner": {
                "id": "loginto_aws-Contaner",
                "path": "cdk-stack-loginto/loginto_aws-Task/loginto_aws-Contaner",
                "children": {
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "cdk-stack-loginto/loginto_aws-Task/loginto_aws-Contaner/LogGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-loginto/loginto_aws-Task/loginto_aws-Contaner/LogGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                          "aws:cdk:cloudformation:props": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "loginto_aws-Service": {
            "id": "loginto_aws-Service",
            "path": "cdk-stack-loginto/loginto_aws-Service",
            "children": {
              "LB": {
                "id": "LB",
                "path": "cdk-stack-loginto/loginto_aws-Service/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "cdk-stack-loginto/loginto_aws-Service/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "loadBalancerAttributes": [
                          {
                            "key": "deletion_protection.enabled",
                            "value": "false"
                          }
                        ],
                        "scheme": "internal",
                        "subnets": [
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940"
                          },
                          {
                            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3"
                          }
                        ],
                        "type": "network"
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "cdk-stack-loginto/loginto_aws-Service/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-loginto/loginto_aws-Service/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "logintoawsServiceLBPublicListenerECSGroup034A17B7"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "logintoawsServiceLBD226E103"
                            },
                            "port": 8001,
                            "protocol": "TCP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "cdk-stack-loginto/loginto_aws-Service/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-loginto/loginto_aws-Service/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "TCP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "cdk-stack-loginto/loginto_aws-Service/LoadBalancerDNS"
              },
              "Service": {
                "id": "Service",
                "path": "cdk-stack-loginto/loginto_aws-Service/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "cdk-stack-loginto/loginto_aws-Service/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "logintoawsfargateserviceautoscaling11600CD7"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "logintoawsServiceLBPublicListenerECSGroup034A17B7"
                            },
                            "containerName": "loginto_aws-Contaner",
                            "containerPort": 8001
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "ENABLED",
                            "subnets": [
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
                              },
                              {
                                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "logintoawsServiceSecurityGroup6AEC50A4",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "logintoawsTask6D2A02D6"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "cdk-stack-loginto/loginto_aws-Service/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "cdk-stack-loginto/loginto_aws-Service/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "cdk-stack-loginto/loginto_aws-Service/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "securityGroupIngress": [
                              {
                                "cidrIp": {
                                  "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputFnGetAttVpc8378EB38CidrBlock14DD2396"
                                },
                                "ipProtocol": "tcp",
                                "fromPort": 8001,
                                "toPort": 8001,
                                "description": "Allow http inbound from VPC"
                              }
                            ],
                            "vpcId": {
                              "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ScalingRole": {
                    "id": "ScalingRole",
                    "path": "cdk-stack-loginto/loginto_aws-Service/Service/ScalingRole"
                  },
                  "TaskCount": {
                    "id": "TaskCount",
                    "path": "cdk-stack-loginto/loginto_aws-Service/Service/TaskCount",
                    "children": {
                      "Target": {
                        "id": "Target",
                        "path": "cdk-stack-loginto/loginto_aws-Service/Service/TaskCount/Target",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "cdk-stack-loginto/loginto_aws-Service/Service/TaskCount/Target/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalableTarget",
                              "aws:cdk:cloudformation:props": {
                                "maxCapacity": 2,
                                "minCapacity": 1,
                                "resourceId": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "service/",
                                      {
                                        "Ref": "logintoawsfargateserviceautoscaling11600CD7"
                                      },
                                      "/",
                                      {
                                        "Fn::GetAtt": [
                                          "logintoawsService3A033009",
                                          "Name"
                                        ]
                                      }
                                    ]
                                  ]
                                },
                                "roleArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
                                    ]
                                  ]
                                },
                                "scalableDimension": "ecs:service:DesiredCount",
                                "serviceNamespace": "ecs"
                              }
                            }
                          },
                          "CpuScaling": {
                            "id": "CpuScaling",
                            "path": "cdk-stack-loginto/loginto_aws-Service/Service/TaskCount/Target/CpuScaling",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "cdk-stack-loginto/loginto_aws-Service/Service/TaskCount/Target/CpuScaling/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApplicationAutoScaling::ScalingPolicy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyName": "cdkstacklogintologintoawsServiceTaskCountTargetCpuScaling53ABE5CA",
                                    "policyType": "TargetTrackingScaling",
                                    "scalingTargetId": {
                                      "Ref": "logintoawsServiceTaskCountTarget7B008D66"
                                    },
                                    "targetTrackingScalingPolicyConfiguration": {
                                      "predefinedMetricSpecification": {
                                        "predefinedMetricType": "ECSServiceAverageCPUUtilization"
                                      },
                                      "scaleInCooldown": 60,
                                      "scaleOutCooldown": 60,
                                      "targetValue": 50
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "cdk-stack-loginto/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "cdk-stack-loginto/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "cdk-stack-loginto/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}