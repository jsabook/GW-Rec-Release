{
  "Resources": {
    "gwlambdatrainroleD4532D6A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/gw_lambda_train_role/Resource"
      }
    },
    "gwsagemakertrainroleF0C213EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/gw_sagemaker_train_role/Resource"
      }
    },
    "graphtrainlambda00C23353": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3BucketFA99A701"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "graph-train.handler",
        "Role": {
          "Fn::GetAtt": [
            "gwlambdatrainroleD4532D6A",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Environment": {
          "Variables": {
            "INPUT_TRAIN_BUCKET": "graph-train-train_bucket",
            "INPUT_VALIDATION_BUCKET": "graph-train-validation-bucket",
            "OUTPUT_BUCKET": "graph-train-bucket-model-2020-12-13-16-06-14-690",
            "NAME": "graph-train",
            "IMAGE_URI": "856419311962.dkr.ecr.us-east-1.amazonaws.com/sagemaker-recsys-graph-train",
            "SAGEMAKER_ROLE": {
              "Fn::GetAtt": [
                "gwsagemakertrainroleF0C213EC",
                "Arn"
              ]
            },
            "INSTANCE": "ml.g4dn.xlarge"
          }
        }
      },
      "DependsOn": [
        "gwlambdatrainroleD4532D6A"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-train-lambda/Resource",
        "aws:asset:path": "asset.35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6",
        "aws:asset:property": "Code"
      }
    },
    "graphtrainbucketevent20201213160614690C4D6304C": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/Resource"
      }
    },
    "graphtrainbucketevent20201213160614690NotificationsF7253110": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "graphtrainbucketevent20201213160614690C4D6304C"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "graphtrainlambda00C23353",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "graphtrainbucketevent20201213160614690AllowBucketNotificationsTocdkstackinfergraphgraphtrainlambda38F36A836692913C"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/Notifications/Resource"
      }
    },
    "graphtrainbucketevent20201213160614690AllowBucketNotificationsTocdkstackinfergraphgraphtrainlambda38F36A836692913C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "graphtrainlambda00C23353",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "graphtrainbucketevent20201213160614690C4D6304C",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-train-bucket-event-2020-12-13-16-06-14-690/AllowBucketNotificationsTocdkstackinfergraphgraphtrainlambda38F36A83"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "exports.handler = (event, context) => {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies\n    const s3 = new (require('aws-sdk').S3)();\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const https = require('https');\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const url = require('url');\n    log(JSON.stringify(event, undefined, 2));\n    const props = event.ResourceProperties;\n    if (event.RequestType === 'Delete') {\n        props.NotificationConfiguration = {}; // this is how you clean out notifications\n    }\n    const req = {\n        Bucket: props.BucketName,\n        NotificationConfiguration: props.NotificationConfiguration,\n    };\n    return s3.putBucketNotificationConfiguration(req, (err, data) => {\n        log({ err, data });\n        if (err) {\n            return submitResponse('FAILED', err.message + `\\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);\n        }\n        else {\n            return submitResponse('SUCCESS');\n        }\n    });\n    function log(obj) {\n        console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);\n    }\n    // eslint-disable-next-line max-len\n    // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule\n    // to allow sending an error messge as a reason.\n    function submitResponse(responseStatus, reason) {\n        const responseBody = JSON.stringify({\n            Status: responseStatus,\n            Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,\n            PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,\n            StackId: event.StackId,\n            RequestId: event.RequestId,\n            LogicalResourceId: event.LogicalResourceId,\n            NoEcho: false,\n        });\n        log({ responseBody });\n        const parsedUrl = url.parse(event.ResponseURL);\n        const options = {\n            hostname: parsedUrl.hostname,\n            port: 443,\n            path: parsedUrl.path,\n            method: 'PUT',\n            headers: {\n                'content-type': '',\n                'content-length': responseBody.length,\n            },\n        };\n        const request = https.request(options, (r) => {\n            log({ statusCode: r.statusCode, statusMessage: r.statusMessage });\n            context.done();\n        });\n        request.on('error', (error) => {\n            log({ sendError: error });\n            context.done();\n        });\n        request.write(responseBody);\n        request.end();\n    }\n};"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "FargateTaskExecutionServiceRole0484E2D1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonECS_FullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/FargateTaskExecutionServiceRole/Resource"
      }
    },
    "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":repository/sagemaker-recsys-graph-inference"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "graphinferencetaskdefinitiongraphinferencecontainerLogGroupE18090C3",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FargateTaskExecutionServiceRoleDefaultPolicyDBE5CDC5",
        "Roles": [
          {
            "Ref": "FargateTaskExecutionServiceRole0484E2D1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/FargateTaskExecutionServiceRole/DefaultPolicy/Resource"
      }
    },
    "fargateserviceautoscalingD107CF93": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/fargate-service-autoscaling/Resource"
      }
    },
    "graphinferencetaskdefinitionDC0AB1F4": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "KG_PATH",
                "Value": "s3://autorec-1"
              },
              {
                "Name": "INPUT_BUCKET_NAME",
                "Value": "s3://autorec-1/input_graph/"
              },
              {
                "Name": "OUTPUT_BUCKET_NAME",
                "Value": "s3://autorec-1/output_graph/"
              }
            ],
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ".dkr.ecr.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/sagemaker-recsys-graph-inference:latest"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "graphinferencetaskdefinitiongraphinferencecontainerLogGroupE18090C3"
                },
                "awslogs-stream-prefix": "graph-inference",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Name": "graph-inference-container",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "HostPort": 8080,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "2048",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "FargateTaskExecutionServiceRole0484E2D1",
            "Arn"
          ]
        },
        "Family": "cdkstackinfergraphgraphinferencetaskdefinitionF61DC092",
        "Memory": "4096",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "FargateTaskExecutionServiceRole0484E2D1",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-task-definition/Resource"
      }
    },
    "graphinferencetaskdefinitiongraphinferencecontainerLogGroupE18090C3": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-task-definition/graph-inference-container/LogGroup/Resource"
      }
    },
    "graphinferenceserviceLB9009C70A": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "Subnets": [
          {
            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
          },
          {
            "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
          }
        ],
        "Type": "network"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/LB/Resource"
      }
    },
    "graphinferenceserviceLBPublicListener339C26B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "graphinferenceserviceLBPublicListenerECSGroupE47406D2"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "graphinferenceserviceLB9009C70A"
        },
        "Port": 80,
        "Protocol": "TCP"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/LB/PublicListener/Resource"
      }
    },
    "graphinferenceserviceLBPublicListenerECSGroupE47406D2": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "TCP",
        "TargetType": "ip",
        "VpcId": {
          "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "graphinferenceserviceServiceD46966A2": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "fargateserviceautoscalingD107CF93"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "graph-inference-container",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "graphinferenceserviceLBPublicListenerECSGroupE47406D2"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "graphinferenceserviceServiceSecurityGroup5B55F824",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456"
              },
              {
                "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "graphinferencetaskdefinitionDC0AB1F4"
        }
      },
      "DependsOn": [
        "graphinferenceserviceLBPublicListenerECSGroupE47406D2",
        "graphinferenceserviceLBPublicListener339C26B4"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/Service/Service"
      }
    },
    "graphinferenceserviceServiceSecurityGroup5B55F824": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "cdk-stack-infer-graph/graph-inference-service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow http inbound from VPC",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "cdk-stack-infer-infra:ExportsOutputRefVpc8378EB38272D6E3A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/Service/SecurityGroup/Resource"
      }
    },
    "graphinferenceserviceServiceTaskCountTargetD151BF2C": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 2,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "fargateserviceautoscalingD107CF93"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "graphinferenceserviceServiceD46966A2",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount/Target/Resource"
      }
    },
    "graphinferenceserviceServiceTaskCountTargetCpuScaling42A4EDC7": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "cdkstackinfergraphgraphinferenceserviceServiceTaskCountTargetCpuScaling4602FE96",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "graphinferenceserviceServiceTaskCountTargetD151BF2C"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/graph-inference-service/Service/TaskCount/Target/CpuScaling/Resource"
      }
    },
    "dkntrainlambda53C85A06": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3BucketFA99A701"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "dkn-train.handler",
        "Role": {
          "Fn::GetAtt": [
            "gwlambdatrainroleD4532D6A",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Environment": {
          "Variables": {
            "INPUT_TRAIN_BUCKET": "autorec-great-wisdom/train.csv/",
            "INPUT_VALIDATION_BUCKET": "autorec-great-wisdom/test.csv/",
            "OUTPUT_BUCKET": "autorec-great-wisdom/output_model/",
            "NAME": "dkn-train",
            "IMAGE_URI": "002224604296.dkr.ecr.us-east-1.amazonaws.com/sagemaker-recsys-dkn-train",
            "SAGEMAKER_ROLE": {
              "Fn::GetAtt": [
                "gwsagemakertrainroleF0C213EC",
                "Arn"
              ]
            },
            "INSTANCE": "ml.p2.xlarge"
          }
        }
      },
      "DependsOn": [
        "gwlambdatrainroleD4532D6A"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/dkn-train-lambda/Resource",
        "aws:asset:path": "asset.35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6",
        "aws:asset:property": "Code"
      }
    },
    "dkntrainbucketevent0D476D16": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/dkn-train-bucket-event/Resource"
      }
    },
    "dkntrainbucketeventNotifications1DC82E01": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "dkntrainbucketevent0D476D16"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "dkntrainlambda53C85A06",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "dkntrainbucketeventAllowBucketNotificationsTocdkstackinfergraphdkntrainlambdaC28563130AF5BBD3"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/dkn-train-bucket-event/Notifications/Resource"
      }
    },
    "dkntrainbucketeventAllowBucketNotificationsTocdkstackinfergraphdkntrainlambdaC28563130AF5BBD3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "dkntrainlambda53C85A06",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "dkntrainbucketevent0D476D16",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/dkn-train-bucket-event/AllowBucketNotificationsTocdkstackinfergraphdkntrainlambdaC2856313"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.75.0,@aws-cdk/assets=1.75.0,@aws-cdk/aws-apigateway=1.75.0,@aws-cdk/aws-apigatewayv2=1.75.0,@aws-cdk/aws-applicationautoscaling=1.75.0,@aws-cdk/aws-autoscaling=1.75.0,@aws-cdk/aws-autoscaling-common=1.75.0,@aws-cdk/aws-autoscaling-hooktargets=1.75.0,@aws-cdk/aws-batch=1.75.0,@aws-cdk/aws-certificatemanager=1.75.0,@aws-cdk/aws-cloudformation=1.75.0,@aws-cdk/aws-cloudfront=1.75.0,@aws-cdk/aws-cloudwatch=1.75.0,@aws-cdk/aws-codebuild=1.75.0,@aws-cdk/aws-codecommit=1.75.0,@aws-cdk/aws-codeguruprofiler=1.75.0,@aws-cdk/aws-codepipeline=1.75.0,@aws-cdk/aws-cognito=1.75.0,@aws-cdk/aws-dynamodb=1.75.0,@aws-cdk/aws-ec2=1.75.0,@aws-cdk/aws-ecr=1.75.0,@aws-cdk/aws-ecr-assets=1.75.0,@aws-cdk/aws-ecs=1.75.0,@aws-cdk/aws-ecs-patterns=1.75.0,@aws-cdk/aws-efs=1.75.0,@aws-cdk/aws-elasticache=1.75.0,@aws-cdk/aws-elasticloadbalancing=1.75.0,@aws-cdk/aws-elasticloadbalancingv2=1.75.0,@aws-cdk/aws-events=1.75.0,@aws-cdk/aws-events-targets=1.75.0,@aws-cdk/aws-iam=1.75.0,@aws-cdk/aws-kinesis=1.75.0,@aws-cdk/aws-kinesisfirehose=1.75.0,@aws-cdk/aws-kms=1.75.0,@aws-cdk/aws-lambda=1.75.0,@aws-cdk/aws-lambda-event-sources=1.75.0,@aws-cdk/aws-logs=1.75.0,@aws-cdk/aws-rds=1.75.0,@aws-cdk/aws-route53=1.75.0,@aws-cdk/aws-route53-targets=1.75.0,@aws-cdk/aws-s3=1.75.0,@aws-cdk/aws-s3-assets=1.75.0,@aws-cdk/aws-s3-notifications=1.75.0,@aws-cdk/aws-sam=1.75.0,@aws-cdk/aws-secretsmanager=1.75.0,@aws-cdk/aws-servicediscovery=1.75.0,@aws-cdk/aws-sns=1.75.0,@aws-cdk/aws-sns-subscriptions=1.75.0,@aws-cdk/aws-sqs=1.75.0,@aws-cdk/aws-ssm=1.75.0,@aws-cdk/aws-stepfunctions=1.75.0,@aws-cdk/cloud-assembly-schema=1.75.0,@aws-cdk/core=1.75.0,@aws-cdk/custom-resources=1.75.0,@aws-cdk/cx-api=1.75.0,@aws-cdk/region-info=1.75.0,jsii-runtime=Python/3.7.7"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack-infer-graph/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3BucketFA99A701": {
      "Type": "String",
      "Description": "S3 bucket for asset \"35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6\""
    },
    "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6S3VersionKey4A6D8503": {
      "Type": "String",
      "Description": "S3 key for asset version \"35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6\""
    },
    "AssetParameters35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6ArtifactHash393816D6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"35d7465e44156e024f834f20c1b764dea526f1744b4bef4218ada97046e996b6\""
    }
  },
  "Outputs": {
    "graphinferenceserviceLoadBalancerDNS68AC7189": {
      "Value": {
        "Fn::GetAtt": [
          "graphinferenceserviceLB9009C70A",
          "DNSName"
        ]
      }
    },
    "ExportsOutputFnGetAttgraphinferenceserviceLB9009C70ADNSNameCE656A64": {
      "Value": {
        "Fn::GetAtt": [
          "graphinferenceserviceLB9009C70A",
          "DNSName"
        ]
      },
      "Export": {
        "Name": "cdk-stack-infer-graph:ExportsOutputFnGetAttgraphinferenceserviceLB9009C70ADNSNameCE656A64"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}